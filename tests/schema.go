/*
Code generated by github-terraform-generator; DO NOT EDIT.
Any modifications will be overwritten
*/

package tests

import schema "github.com/hashicorp/terraform-plugin-framework/resource/schema"

func coffeeSchema() schema.Schema {
	return schema.Schema{
		MarkdownDescription: "",
		Attributes: map[string]schema.Attribute{
			"id": schema.Int64Attribute{
				Optional: true,
				Default:  nil,
			},
			"name": schema.StringAttribute{
				Required: true,
				Default:  nil,
			},
			"teaser": schema.StringAttribute{
				Optional: true,
				Default:  nil,
			},
			"description": schema.StringAttribute{
				Optional: true,
				Default:  nil,
			},
			"image": schema.StringAttribute{
				Optional: true,
				Default:  nil,
			},
			"ingredients": &schema.ListNestedAttribute{
				Optional: true,
				NestedObject: schema.NestedAttributeObject{
					Attributes: map[string]schema.Attribute{
						"id": schema.Int64Attribute{
							Required: true,
							Default:  nil,
						},
					}},
			},
			"customer": &schema.SingleNestedAttribute{
				Optional: true,
				Default:  nil,
				Attributes: map[string]schema.Attribute{
					"id": schema.Int64Attribute{
						Optional: true,
						Default:  nil,
					},
					"name": schema.StringAttribute{
						Optional: true,
						Default:  nil,
					},
				},
			},
		},
		Blocks: map[string]schema.Block{},
	}
}

func configSchema() schema.Schema {
	return schema.Schema{
		MarkdownDescription: "",
		Attributes: map[string]schema.Attribute{
			"host": schema.StringAttribute{
				Required: true,
				Default:  nil,
			},
			"bool": schema.BoolAttribute{
				Optional: true,
				Default:  nil,
			},
			"int": schema.Int64Attribute{
				Optional: true,
				Default:  nil,
			},
			"string": schema.StringAttribute{
				Optional: true,
				Default:  nil,
			},
		},
		Blocks: map[string]schema.Block{},
	}
}

func ingredientSchema() schema.Schema {
	return schema.Schema{
		MarkdownDescription: "",
		Attributes: map[string]schema.Attribute{
			"id": schema.Int64Attribute{
				Required: true,
				Default:  nil,
			},
		},
		Blocks: map[string]schema.Block{},
	}
}
